{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/user/Desktop/career/coding-test/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/user/Desktop/career/coding-test\",\"filename\":\"/Users/user/Desktop/career/coding-test/src/engine.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/user/Desktop/career/coding-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/user/Desktop/career/coding-test/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/user/Desktop/career/coding-test",
      "filename": "/Users/user/Desktop/career/coding-test/src/engine.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "/Users/user/Desktop/career/coding-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/user/Desktop/career/coding-test/src/engine.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/user/Desktop/career/coding-test/src/engine.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/user/Desktop/career/coding-test/src/",
        "sourceFileName": "engine.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _engine = require(\"./engine\");\n\nvar _ = false;\nvar o = true;\ndescribe(\"next\", function () {\n  it(\"should return all dead cells given all dead cells\", function () {\n    (0, _chai.expect)((0, _engine.next)([[_, _, _], [_, _, _], [_, _, _]])).to.deep.equal([[_, _, _], [_, _, _], [_, _, _]]);\n  });\n  it(\"should be dead if there is no neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, _], [_, o, _], [_, _, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(false);\n  });\n  it(\"should be dead if there are four or more neighbours\", function () {\n    var result = (0, _engine.next)([[o, _, o], [_, o, o], [o, o, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(false);\n  });\n  it(\"should be dead if there are four or more neighbours #2\", function () {\n    var result = (0, _engine.next)([[o, _, o], [o, o, o], [_, o, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(false);\n    (0, _chai.expect)(result[2][0]).to.equal(true);\n  });\n  it(\"should survive if there are 2 or 3 neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, o], [_, o, o], [o, _, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(true);\n    (0, _chai.expect)(result[1][2]).to.equal(true);\n  });\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, o], [_, _, o], [o, _, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(true);\n    (0, _chai.expect)(result[0][2]).to.equal(false);\n  });\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, o, _, _, o], [_, o, o, _, _, _], [o, _, _, _, o, _], [_, _, o, _, _, o], [_, _, _, _, _, _], [o, _, _, _, _, _]]);\n    (0, _chai.expect)(result[5][5]).to.equal(false);\n    (0, _chai.expect)(result[2][1]).to.equal(false);\n    (0, _chai.expect)(result[2][2]).to.equal(true);\n  });\n});\ndescribe(\"parse\", function () {\n  it(\"should return [] given ''\", function () {\n    (0, _chai.expect)((0, _engine.parse)(\"\")).to.deep.equal([]);\n  });\n  it(\"should parse O as true and . as false\", function () {\n    (0, _chai.expect)((0, _engine.parse)(\"...\\n.O.\\n...\\n\")).to.deep.equal([[_, _, _], [_, o, _], [_, _, _]]);\n  });\n  it(\"should parse O as true and . as false\", function () {\n    (0, _chai.expect)((0, _engine.parse)(\"...0\\n.00.\\n..0.\\n0...\\n\")).to.deep.equal([[_, _, _, o], [_, o, o, _], [_, _, o, _], [o, _, _, _]]);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "engine.test.js"
      ],
      "names": [
        "_",
        "o",
        "describe",
        "it",
        "to",
        "deep",
        "equal",
        "result"
      ],
      "mappings": ";;AAAA;;AACA;;AACA,IAAMA,CAAC,GAAG,KAAV;AACA,IAAMC,CAAC,GAAG,IAAV;AACAC,QAAQ,CAAC,MAAD,EAAS,YAAM;AACrBC,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,sBACE,kBAAK,CACH,CAACH,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CADG,EAEH,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAFG,EAGH,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAHG,CAAL,CADF,EAMEI,EANF,CAMKC,IANL,CAMUC,KANV,CAMgB,CACd,CAACN,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CADc,EAEd,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAFc,EAGd,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAHc,CANhB;AAWD,GAZC,CAAF;AAcAG,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACnD,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CADkB,EAElB,CAACA,CAAD,EAAIC,CAAJ,EAAOD,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACD,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAC9D,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACN,CAAD,EAAID,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAIA,CAAJ,EAAOD,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACD,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,wDAAD,EAA2D,YAAM;AACjE,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACN,CAAD,EAAID,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAFkB,EAGlB,CAACD,CAAD,EAAIC,CAAJ,EAAOD,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACD,GARC,CAAF;AAUAH,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxD,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAID,CAAJ,EAAOA,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACD,GARC,CAAF;AAUAH,EAAAA,EAAE,CAAC,sEAAD,EAAyE,YAAM;AAC/E,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACD,CAAD,EAAIA,CAAJ,EAAOC,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAID,CAAJ,EAAOA,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACD,GARC,CAAF;AAUAH,EAAAA,EAAE,CAAC,sEAAD,EAAyE,YAAM;AAC/E,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOC,CAAP,EAAUD,CAAV,EAAaA,CAAb,EAAgBC,CAAhB,CADkB,EAElB,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,EAAUD,CAAV,EAAaA,CAAb,EAAgBA,CAAhB,CAFkB,EAGlB,CAACC,CAAD,EAAID,CAAJ,EAAOA,CAAP,EAAUA,CAAV,EAAaC,CAAb,EAAgBD,CAAhB,CAHkB,EAIlB,CAACA,CAAD,EAAIA,CAAJ,EAAOC,CAAP,EAAUD,CAAV,EAAaA,CAAb,EAAgBC,CAAhB,CAJkB,EAKlB,CAACD,CAAD,EAAIA,CAAJ,EAAOA,CAAP,EAAUA,CAAV,EAAaA,CAAb,EAAgBA,CAAhB,CALkB,EAMlB,CAACC,CAAD,EAAID,CAAJ,EAAOA,CAAP,EAAUA,CAAV,EAAaA,CAAb,EAAgBA,CAAhB,CANkB,CAAL,CAAf;AAQA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACD,GAZC,CAAF;AAaD,CA5EO,CAAR;AA8EAJ,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpC,sBAAO,mBAAM,EAAN,CAAP,EAAkBC,EAAlB,CAAqBC,IAArB,CAA0BC,KAA1B,CAAgC,EAAhC;AACD,GAFC,CAAF;AAGAH,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,sBAAO,mBAAM,iBAAN,CAAP,EAAiCC,EAAjC,CAAoCC,IAApC,CAAyCC,KAAzC,CAA+C,CAC7C,CAACN,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAD6C,EAE7C,CAACA,CAAD,EAAIC,CAAJ,EAAOD,CAAP,CAF6C,EAG7C,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAH6C,CAA/C;AAKD,GANC,CAAF;AAOAG,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,sBAAO,mBAAM,0BAAN,CAAP,EAA0CC,EAA1C,CAA6CC,IAA7C,CAAkDC,KAAlD,CAAwD,CACtD,CAACN,CAAD,EAAIA,CAAJ,EAAOA,CAAP,EAAUC,CAAV,CADsD,EAEtD,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,EAAUD,CAAV,CAFsD,EAGtD,CAACA,CAAD,EAAIA,CAAJ,EAAOC,CAAP,EAAUD,CAAV,CAHsD,EAItD,CAACC,CAAD,EAAID,CAAJ,EAAOA,CAAP,EAAUA,CAAV,CAJsD,CAAxD;AAMD,GAPC,CAAF;AAQD,CAnBO,CAAR",
      "sourceRoot": "/Users/user/Desktop/career/coding-test/src/",
      "sourcesContent": [
        "import { expect } from \"chai\";\nimport { next, parse } from \"./engine\";\nconst _ = false;\nconst o = true;\ndescribe(\"next\", () => {\n  it(\"should return all dead cells given all dead cells\", () => {\n    expect(\n      next([\n        [_, _, _],\n        [_, _, _],\n        [_, _, _],\n      ])\n    ).to.deep.equal([\n      [_, _, _],\n      [_, _, _],\n      [_, _, _],\n    ]);\n  });\n\n  it(\"should be dead if there is no neighbours\", () => {\n    const result = next([\n      [_, _, _],\n      [_, o, _],\n      [_, _, _],\n    ]);\n    expect(result[1][1]).to.equal(false);\n  });\n\n  it(\"should be dead if there are four or more neighbours\", () => {\n    const result = next([\n      [o, _, o],\n      [_, o, o],\n      [o, o, _],\n    ]);\n    expect(result[1][1]).to.equal(false);\n  });\n\n  it(\"should be dead if there are four or more neighbours #2\", () => {\n    const result = next([\n      [o, _, o],\n      [o, o, o],\n      [_, o, _],\n    ]);\n    expect(result[1][1]).to.equal(false);\n    expect(result[2][0]).to.equal(true);\n  });\n\n  it(\"should survive if there are 2 or 3 neighbours\", () => {\n    const result = next([\n      [_, _, o],\n      [_, o, o],\n      [o, _, _],\n    ]);\n    expect(result[1][1]).to.equal(true);\n    expect(result[1][2]).to.equal(true);\n  });\n\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", () => {\n    const result = next([\n      [_, _, o],\n      [_, _, o],\n      [o, _, _],\n    ]);\n    expect(result[1][1]).to.equal(true);\n    expect(result[0][2]).to.equal(false);\n  });\n\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", () => {\n    const result = next([\n      [_, _, o, _, _, o],\n      [_, o, o, _, _, _],\n      [o, _, _, _, o, _],\n      [_, _, o, _, _, o],\n      [_, _, _, _, _, _],\n      [o, _, _, _, _, _],\n    ]);\n    expect(result[5][5]).to.equal(false);\n    expect(result[2][1]).to.equal(false);\n    expect(result[2][2]).to.equal(true);\n  });\n});\n\ndescribe(\"parse\", () => {\n  it(\"should return [] given ''\", () => {\n    expect(parse(\"\")).to.deep.equal([]);\n  });\n  it(\"should parse O as true and . as false\", () => {\n    expect(parse(\"...\\n.O.\\n...\\n\")).to.deep.equal([\n      [_, _, _],\n      [_, o, _],\n      [_, _, _],\n    ]);\n  });\n  it(\"should parse O as true and . as false\", () => {\n    expect(parse(\"...0\\n.00.\\n..0.\\n0...\\n\")).to.deep.equal([\n      [_, _, _, o],\n      [_, o, o, _],\n      [_, _, o, _],\n      [o, _, _, _],\n    ]);\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1628464302212
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/user/Desktop/career/coding-test/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/user/Desktop/career/coding-test\",\"filename\":\"/Users/user/Desktop/career/coding-test/src/engine.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/user/Desktop/career/coding-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/user/Desktop/career/coding-test/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/user/Desktop/career/coding-test",
      "filename": "/Users/user/Desktop/career/coding-test/src/engine.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "/Users/user/Desktop/career/coding-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/user/Desktop/career/coding-test/src/engine.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/user/Desktop/career/coding-test/src/engine.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/user/Desktop/career/coding-test/src/",
        "sourceFileName": "engine.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = exports.next = void 0;\n\n// (world: boolean[][]) => boolean[][]\nvar next = function next(world) {\n  var rows = world.length;\n  var cols = world[0].length;\n  var nestedArray = Array.from({\n    length: rows\n  }, function () {\n    return Array.from({\n      length: cols\n    }, function () {\n      return false;\n    });\n  });\n  nestedArray.forEach(function (row, y) {\n    return row.forEach(function (col, x) {\n      var number = 0;\n      var x_start = x >= 1 ? x - 1 : 0;\n      var y_start = y >= 1 ? y - 1 : 0;\n      var x_len = x == 0 || x == cols - 1 ? 1 : 2;\n      var y_len = y == 0 || y == rows - 1 ? 1 : 2;\n\n      for (var i = 0; i <= x_len; i++) {\n        for (var j = 0; j <= y_len; j++) {\n          if (i + x_start == x && j + y_start == y) continue;\n\n          if (world[j + y_start][i + x_start] == true) {\n            number++;\n          }\n        }\n      }\n\n      if (number == 2 || number == 3) {\n        row[x] = true;\n      }\n    });\n  });\n  return nestedArray;\n}; // (pattern: string) => boolean[][]\n\n\nexports.next = next;\n\nvar parse = function parse(pattern) {\n  if (!pattern) return [];\n  var worldArr = pattern.split(\"\\n\").map(function (e) {\n    return e.split(\"\").map(function (x) {\n      return Boolean(x !== \".\");\n    });\n  });\n  worldArr.splice(-1);\n  return worldArr;\n};\n\nexports.parse = parse;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuZ2luZS5qcyJdLCJuYW1lcyI6WyJuZXh0Iiwid29ybGQiLCJyb3dzIiwibGVuZ3RoIiwiY29scyIsIm5lc3RlZEFycmF5IiwiQXJyYXkiLCJmcm9tIiwiZm9yRWFjaCIsInJvdyIsInkiLCJjb2wiLCJ4IiwibnVtYmVyIiwieF9zdGFydCIsInlfc3RhcnQiLCJ4X2xlbiIsInlfbGVuIiwiaSIsImoiLCJwYXJzZSIsInBhdHRlcm4iLCJ3b3JsZEFyciIsInNwbGl0IiwibWFwIiwiZSIsIkJvb2xlYW4iLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNPLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLEtBQUQsRUFBVztBQUM3QixNQUFNQyxJQUFJLEdBQUdELEtBQUssQ0FBQ0UsTUFBbkI7QUFDQSxNQUFNQyxJQUFJLEdBQUdILEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0UsTUFBdEI7QUFFQSxNQUFNRSxXQUFXLEdBQUdDLEtBQUssQ0FBQ0MsSUFBTixDQUFXO0FBQUVKLElBQUFBLE1BQU0sRUFBRUQ7QUFBVixHQUFYLEVBQTZCO0FBQUEsV0FDL0NJLEtBQUssQ0FBQ0MsSUFBTixDQUFXO0FBQUVKLE1BQUFBLE1BQU0sRUFBRUM7QUFBVixLQUFYLEVBQTZCO0FBQUEsYUFBTSxLQUFOO0FBQUEsS0FBN0IsQ0FEK0M7QUFBQSxHQUE3QixDQUFwQjtBQUdBQyxFQUFBQSxXQUFXLENBQUNHLE9BQVosQ0FBb0IsVUFBQ0MsR0FBRCxFQUFNQyxDQUFOO0FBQUEsV0FDbEJELEdBQUcsQ0FBQ0QsT0FBSixDQUNFLFVBQVNHLEdBQVQsRUFBY0MsQ0FBZCxFQUFpQjtBQUNmLFVBQUlDLE1BQU0sR0FBRyxDQUFiO0FBQ0EsVUFBSUMsT0FBTyxHQUFHRixDQUFDLElBQUksQ0FBTCxHQUFTQSxDQUFDLEdBQUcsQ0FBYixHQUFpQixDQUEvQjtBQUNBLFVBQUlHLE9BQU8sR0FBR0wsQ0FBQyxJQUFJLENBQUwsR0FBU0EsQ0FBQyxHQUFHLENBQWIsR0FBaUIsQ0FBL0I7QUFDQSxVQUFJTSxLQUFLLEdBQUdKLENBQUMsSUFBSSxDQUFMLElBQVVBLENBQUMsSUFBSVIsSUFBSSxHQUFHLENBQXRCLEdBQTBCLENBQTFCLEdBQThCLENBQTFDO0FBQ0EsVUFBSWEsS0FBSyxHQUFHUCxDQUFDLElBQUksQ0FBTCxJQUFVQSxDQUFDLElBQUlSLElBQUksR0FBRyxDQUF0QixHQUEwQixDQUExQixHQUE4QixDQUExQzs7QUFDQSxXQUFJLElBQUlnQixDQUFDLEdBQUcsQ0FBWixFQUFlQSxDQUFDLElBQUlGLEtBQXBCLEVBQTJCRSxDQUFDLEVBQTVCLEVBQWdDO0FBQzlCLGFBQUksSUFBSUMsQ0FBQyxHQUFHLENBQVosRUFBZUEsQ0FBQyxJQUFJRixLQUFwQixFQUEyQkUsQ0FBQyxFQUE1QixFQUFnQztBQUM5QixjQUFJRCxDQUFDLEdBQUdKLE9BQUosSUFBZUYsQ0FBZixJQUFvQk8sQ0FBQyxHQUFHSixPQUFKLElBQWVMLENBQXZDLEVBQTBDOztBQUMxQyxjQUFJVCxLQUFLLENBQUNrQixDQUFDLEdBQUdKLE9BQUwsQ0FBTCxDQUFtQkcsQ0FBQyxHQUFHSixPQUF2QixLQUFtQyxJQUF2QyxFQUE2QztBQUMzQ0QsWUFBQUEsTUFBTTtBQUNQO0FBQ0Y7QUFDRjs7QUFFRCxVQUFJQSxNQUFNLElBQUksQ0FBVixJQUFlQSxNQUFNLElBQUksQ0FBN0IsRUFBZ0M7QUFDOUJKLFFBQUFBLEdBQUcsQ0FBQ0csQ0FBRCxDQUFILEdBQVMsSUFBVDtBQUNEO0FBQ0osS0FuQkQsQ0FEa0I7QUFBQSxHQUFwQjtBQXNCQSxTQUFPUCxXQUFQO0FBQ0QsQ0E5Qk0sQyxDQStCUDs7Ozs7QUFDTyxJQUFNZSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxDQUFDQyxPQUFELEVBQWE7QUFDaEMsTUFBSSxDQUFDQSxPQUFMLEVBQWMsT0FBTyxFQUFQO0FBQ2QsTUFBSUMsUUFBUSxHQUFHRCxPQUFPLENBQUNFLEtBQVIsQ0FBYyxJQUFkLEVBQW9CQyxHQUFwQixDQUF3QixVQUFTQyxDQUFULEVBQVk7QUFDakQsV0FBT0EsQ0FBQyxDQUFDRixLQUFGLENBQVEsRUFBUixFQUFZQyxHQUFaLENBQWdCLFVBQUFaLENBQUM7QUFBQSxhQUFJYyxPQUFPLENBQUNkLENBQUMsS0FBSyxHQUFQLENBQVg7QUFBQSxLQUFqQixDQUFQO0FBQ0QsR0FGYyxDQUFmO0FBR0FVLEVBQUFBLFFBQVEsQ0FBQ0ssTUFBVCxDQUFnQixDQUFDLENBQWpCO0FBQ0EsU0FBT0wsUUFBUDtBQUNELENBUE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL3VzZXIvRGVza3RvcC9jYXJlZXIvY29kaW5nLXRlc3Qvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIi8vICh3b3JsZDogYm9vbGVhbltdW10pID0+IGJvb2xlYW5bXVtdXG5leHBvcnQgY29uc3QgbmV4dCA9ICh3b3JsZCkgPT4ge1xuICBjb25zdCByb3dzID0gd29ybGQubGVuZ3RoO1xuICBjb25zdCBjb2xzID0gd29ybGRbMF0ubGVuZ3RoO1xuXG4gIGNvbnN0IG5lc3RlZEFycmF5ID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogcm93cyB9LCAoKSA9PiBcbiAgICBBcnJheS5mcm9tKHsgbGVuZ3RoOiBjb2xzIH0sICgpID0+IGZhbHNlKVxuICApO1xuICBuZXN0ZWRBcnJheS5mb3JFYWNoKChyb3csIHkpID0+XG4gICAgcm93LmZvckVhY2goXG4gICAgICBmdW5jdGlvbihjb2wsIHgpIHtcbiAgICAgICAgdmFyIG51bWJlciA9IDA7XG4gICAgICAgIHZhciB4X3N0YXJ0ID0geCA+PSAxID8geCAtIDEgOiAwO1xuICAgICAgICB2YXIgeV9zdGFydCA9IHkgPj0gMSA/IHkgLSAxIDogMDtcbiAgICAgICAgdmFyIHhfbGVuID0geCA9PSAwIHx8IHggPT0gY29scyAtIDEgPyAxIDogMjtcbiAgICAgICAgdmFyIHlfbGVuID0geSA9PSAwIHx8IHkgPT0gcm93cyAtIDEgPyAxIDogMjtcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8PSB4X2xlbjsgaSsrKSB7XG4gICAgICAgICAgZm9yKHZhciBqID0gMDsgaiA8PSB5X2xlbjsgaisrKSB7XG4gICAgICAgICAgICBpZiAoaSArIHhfc3RhcnQgPT0geCAmJiBqICsgeV9zdGFydCA9PSB5KSBjb250aW51ZTtcbiAgICAgICAgICAgIGlmICh3b3JsZFtqICsgeV9zdGFydF1baSArIHhfc3RhcnRdID09IHRydWUpIHtcbiAgICAgICAgICAgICAgbnVtYmVyKys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG51bWJlciA9PSAyIHx8IG51bWJlciA9PSAzKSB7XG4gICAgICAgICAgcm93W3hdID0gdHJ1ZTtcbiAgICAgICAgfSBcbiAgICB9KVxuICApO1xuICByZXR1cm4gbmVzdGVkQXJyYXk7XG59O1xuLy8gKHBhdHRlcm46IHN0cmluZykgPT4gYm9vbGVhbltdW11cbmV4cG9ydCBjb25zdCBwYXJzZSA9IChwYXR0ZXJuKSA9PiB7XG4gIGlmICghcGF0dGVybikgcmV0dXJuIFtdO1xuICB2YXIgd29ybGRBcnIgPSBwYXR0ZXJuLnNwbGl0KFwiXFxuXCIpLm1hcChmdW5jdGlvbihlKSB7XG4gICAgcmV0dXJuIGUuc3BsaXQoXCJcIikubWFwKHggPT4gQm9vbGVhbih4ICE9PSBcIi5cIikpO1xuICB9KTtcbiAgd29ybGRBcnIuc3BsaWNlKC0xKTtcbiAgcmV0dXJuIHdvcmxkQXJyO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "engine.js"
      ],
      "names": [
        "next",
        "world",
        "rows",
        "length",
        "cols",
        "nestedArray",
        "Array",
        "from",
        "forEach",
        "row",
        "y",
        "col",
        "x",
        "number",
        "x_start",
        "y_start",
        "x_len",
        "y_len",
        "i",
        "j",
        "parse",
        "pattern",
        "worldArr",
        "split",
        "map",
        "e",
        "Boolean",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;AACO,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAnB;AACA,MAAMC,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASE,MAAtB;AAEA,MAAME,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEJ,IAAAA,MAAM,EAAED;AAAV,GAAX,EAA6B;AAAA,WAC/CI,KAAK,CAACC,IAAN,CAAW;AAAEJ,MAAAA,MAAM,EAAEC;AAAV,KAAX,EAA6B;AAAA,aAAM,KAAN;AAAA,KAA7B,CAD+C;AAAA,GAA7B,CAApB;AAGAC,EAAAA,WAAW,CAACG,OAAZ,CAAoB,UAACC,GAAD,EAAMC,CAAN;AAAA,WAClBD,GAAG,CAACD,OAAJ,CACE,UAASG,GAAT,EAAcC,CAAd,EAAiB;AACf,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,OAAO,GAAGF,CAAC,IAAI,CAAL,GAASA,CAAC,GAAG,CAAb,GAAiB,CAA/B;AACA,UAAIG,OAAO,GAAGL,CAAC,IAAI,CAAL,GAASA,CAAC,GAAG,CAAb,GAAiB,CAA/B;AACA,UAAIM,KAAK,GAAGJ,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAIR,IAAI,GAAG,CAAtB,GAA0B,CAA1B,GAA8B,CAA1C;AACA,UAAIa,KAAK,GAAGP,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAIR,IAAI,GAAG,CAAtB,GAA0B,CAA1B,GAA8B,CAA1C;;AACA,WAAI,IAAIgB,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,cAAID,CAAC,GAAGJ,OAAJ,IAAeF,CAAf,IAAoBO,CAAC,GAAGJ,OAAJ,IAAeL,CAAvC,EAA0C;;AAC1C,cAAIT,KAAK,CAACkB,CAAC,GAAGJ,OAAL,CAAL,CAAmBG,CAAC,GAAGJ,OAAvB,KAAmC,IAAvC,EAA6C;AAC3CD,YAAAA,MAAM;AACP;AACF;AACF;;AAED,UAAIA,MAAM,IAAI,CAAV,IAAeA,MAAM,IAAI,CAA7B,EAAgC;AAC9BJ,QAAAA,GAAG,CAACG,CAAD,CAAH,GAAS,IAAT;AACD;AACJ,KAnBD,CADkB;AAAA,GAApB;AAsBA,SAAOP,WAAP;AACD,CA9BM,C,CA+BP;;;;;AACO,IAAMe,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAa;AAChC,MAAI,CAACA,OAAL,EAAc,OAAO,EAAP;AACd,MAAIC,QAAQ,GAAGD,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAwB,UAASC,CAAT,EAAY;AACjD,WAAOA,CAAC,CAACF,KAAF,CAAQ,EAAR,EAAYC,GAAZ,CAAgB,UAAAZ,CAAC;AAAA,aAAIc,OAAO,CAACd,CAAC,KAAK,GAAP,CAAX;AAAA,KAAjB,CAAP;AACD,GAFc,CAAf;AAGAU,EAAAA,QAAQ,CAACK,MAAT,CAAgB,CAAC,CAAjB;AACA,SAAOL,QAAP;AACD,CAPM",
      "sourceRoot": "/Users/user/Desktop/career/coding-test/src/",
      "sourcesContent": [
        "// (world: boolean[][]) => boolean[][]\nexport const next = (world) => {\n  const rows = world.length;\n  const cols = world[0].length;\n\n  const nestedArray = Array.from({ length: rows }, () => \n    Array.from({ length: cols }, () => false)\n  );\n  nestedArray.forEach((row, y) =>\n    row.forEach(\n      function(col, x) {\n        var number = 0;\n        var x_start = x >= 1 ? x - 1 : 0;\n        var y_start = y >= 1 ? y - 1 : 0;\n        var x_len = x == 0 || x == cols - 1 ? 1 : 2;\n        var y_len = y == 0 || y == rows - 1 ? 1 : 2;\n        for(var i = 0; i <= x_len; i++) {\n          for(var j = 0; j <= y_len; j++) {\n            if (i + x_start == x && j + y_start == y) continue;\n            if (world[j + y_start][i + x_start] == true) {\n              number++;\n            }\n          }\n        }\n\n        if (number == 2 || number == 3) {\n          row[x] = true;\n        } \n    })\n  );\n  return nestedArray;\n};\n// (pattern: string) => boolean[][]\nexport const parse = (pattern) => {\n  if (!pattern) return [];\n  var worldArr = pattern.split(\"\\n\").map(function(e) {\n    return e.split(\"\").map(x => Boolean(x !== \".\"));\n  });\n  worldArr.splice(-1);\n  return worldArr;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1628426417518
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/user/Desktop/career/rubbish/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/user/Desktop/career/rubbish\",\"filename\":\"/Users/user/Desktop/career/rubbish/src/engine.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/user/Desktop/career/rubbish\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/user/Desktop/career/rubbish/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/user/Desktop/career/rubbish",
      "filename": "/Users/user/Desktop/career/rubbish/src/engine.test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "/Users/user/Desktop/career/rubbish",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/user/Desktop/career/rubbish/src/engine.test.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/user/Desktop/career/rubbish/src/engine.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/user/Desktop/career/rubbish/src/",
        "sourceFileName": "engine.test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _engine = require(\"./engine\");\n\nvar _ = false;\nvar o = true;\ndescribe(\"next\", function () {\n  it(\"should return all dead cells given all dead cells\", function () {\n    (0, _chai.expect)((0, _engine.next)([[_, _, _], [_, _, _], [_, _, _]])).to.deep.equal([[_, _, _], [_, _, _], [_, _, _]]);\n  });\n  it(\"should be dead if there is no neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, _], [_, o, _], [_, _, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(false);\n  });\n  it(\"should be dead if there are four or more neighbours\", function () {\n    var result = (0, _engine.next)([[o, _, o], [_, o, o], [o, o, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(false);\n  });\n  it(\"should be dead if there are four or more neighbours #2\", function () {\n    var result = (0, _engine.next)([[o, _, o], [o, o, o], [_, o, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(false);\n    (0, _chai.expect)(result[2][0]).to.equal(true);\n  });\n  it(\"should survive if there are 2 or 3 neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, o], [_, o, o], [o, _, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(true);\n    (0, _chai.expect)(result[1][2]).to.equal(true);\n  });\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, o], [_, _, o], [o, _, _]]);\n    (0, _chai.expect)(result[1][1]).to.equal(true);\n    (0, _chai.expect)(result[0][2]).to.equal(false);\n  });\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", function () {\n    var result = (0, _engine.next)([[_, _, o, _, _, o], [_, o, o, _, _, _], [o, _, _, _, o, _], [_, _, o, _, _, o], [_, _, _, _, _, _], [o, _, _, _, _, _]]);\n    (0, _chai.expect)(result[5][5]).to.equal(false);\n    (0, _chai.expect)(result[2][1]).to.equal(false);\n    (0, _chai.expect)(result[2][2]).to.equal(true);\n  });\n});\ndescribe(\"parse\", function () {\n  it(\"should return [] given ''\", function () {\n    (0, _chai.expect)((0, _engine.parse)(\"\")).to.deep.equal([]);\n  });\n  it(\"should parse O as true and . as false\", function () {\n    (0, _chai.expect)((0, _engine.parse)(\"...\\n.O.\\n...\\n\")).to.deep.equal([[_, _, _], [_, o, _], [_, _, _]]);\n  });\n  it(\"should parse O as true and . as false\", function () {\n    (0, _chai.expect)((0, _engine.parse)(\"...0\\n.00.\\n..0.\\n0...\\n\")).to.deep.equal([[_, _, _, o], [_, o, o, _], [_, _, o, _], [o, _, _, _]]);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "engine.test.js"
      ],
      "names": [
        "_",
        "o",
        "describe",
        "it",
        "to",
        "deep",
        "equal",
        "result"
      ],
      "mappings": ";;AAAA;;AACA;;AACA,IAAMA,CAAC,GAAG,KAAV;AACA,IAAMC,CAAC,GAAG,IAAV;AACAC,QAAQ,CAAC,MAAD,EAAS,YAAM;AACrBC,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,sBACE,kBAAK,CACH,CAACH,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CADG,EAEH,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAFG,EAGH,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAHG,CAAL,CADF,EAMEI,EANF,CAMKC,IANL,CAMUC,KANV,CAMgB,CACd,CAACN,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CADc,EAEd,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAFc,EAGd,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAHc,CANhB;AAWD,GAZC,CAAF;AAcAG,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACnD,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CADkB,EAElB,CAACA,CAAD,EAAIC,CAAJ,EAAOD,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACD,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAC9D,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACN,CAAD,EAAID,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAIA,CAAJ,EAAOD,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACD,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,wDAAD,EAA2D,YAAM;AACjE,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACN,CAAD,EAAID,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAFkB,EAGlB,CAACD,CAAD,EAAIC,CAAJ,EAAOD,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACD,GARC,CAAF;AAUAH,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxD,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAID,CAAJ,EAAOA,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACD,GARC,CAAF;AAUAH,EAAAA,EAAE,CAAC,sEAAD,EAAyE,YAAM;AAC/E,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOC,CAAP,CADkB,EAElB,CAACD,CAAD,EAAIA,CAAJ,EAAOC,CAAP,CAFkB,EAGlB,CAACA,CAAD,EAAID,CAAJ,EAAOA,CAAP,CAHkB,CAAL,CAAf;AAKA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACD,GARC,CAAF;AAUAH,EAAAA,EAAE,CAAC,sEAAD,EAAyE,YAAM;AAC/E,QAAMI,MAAM,GAAG,kBAAK,CAClB,CAACP,CAAD,EAAIA,CAAJ,EAAOC,CAAP,EAAUD,CAAV,EAAaA,CAAb,EAAgBC,CAAhB,CADkB,EAElB,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,EAAUD,CAAV,EAAaA,CAAb,EAAgBA,CAAhB,CAFkB,EAGlB,CAACC,CAAD,EAAID,CAAJ,EAAOA,CAAP,EAAUA,CAAV,EAAaC,CAAb,EAAgBD,CAAhB,CAHkB,EAIlB,CAACA,CAAD,EAAIA,CAAJ,EAAOC,CAAP,EAAUD,CAAV,EAAaA,CAAb,EAAgBC,CAAhB,CAJkB,EAKlB,CAACD,CAAD,EAAIA,CAAJ,EAAOA,CAAP,EAAUA,CAAV,EAAaA,CAAb,EAAgBA,CAAhB,CALkB,EAMlB,CAACC,CAAD,EAAID,CAAJ,EAAOA,CAAP,EAAUA,CAAV,EAAaA,CAAb,EAAgBA,CAAhB,CANkB,CAAL,CAAf;AAQA,sBAAOO,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,KAA9B;AACA,sBAAOC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP,EAAqBH,EAArB,CAAwBE,KAAxB,CAA8B,IAA9B;AACD,GAZC,CAAF;AAaD,CA5EO,CAAR;AA8EAJ,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpC,sBAAO,mBAAM,EAAN,CAAP,EAAkBC,EAAlB,CAAqBC,IAArB,CAA0BC,KAA1B,CAAgC,EAAhC;AACD,GAFC,CAAF;AAGAH,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,sBAAO,mBAAM,iBAAN,CAAP,EAAiCC,EAAjC,CAAoCC,IAApC,CAAyCC,KAAzC,CAA+C,CAC7C,CAACN,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAD6C,EAE7C,CAACA,CAAD,EAAIC,CAAJ,EAAOD,CAAP,CAF6C,EAG7C,CAACA,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAH6C,CAA/C;AAKD,GANC,CAAF;AAOAG,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,sBAAO,mBAAM,0BAAN,CAAP,EAA0CC,EAA1C,CAA6CC,IAA7C,CAAkDC,KAAlD,CAAwD,CACtD,CAACN,CAAD,EAAIA,CAAJ,EAAOA,CAAP,EAAUC,CAAV,CADsD,EAEtD,CAACD,CAAD,EAAIC,CAAJ,EAAOA,CAAP,EAAUD,CAAV,CAFsD,EAGtD,CAACA,CAAD,EAAIA,CAAJ,EAAOC,CAAP,EAAUD,CAAV,CAHsD,EAItD,CAACC,CAAD,EAAID,CAAJ,EAAOA,CAAP,EAAUA,CAAV,CAJsD,CAAxD;AAMD,GAPC,CAAF;AAQD,CAnBO,CAAR",
      "sourceRoot": "/Users/user/Desktop/career/rubbish/src/",
      "sourcesContent": [
        "import { expect } from \"chai\";\nimport { next, parse } from \"./engine\";\nconst _ = false;\nconst o = true;\ndescribe(\"next\", () => {\n  it(\"should return all dead cells given all dead cells\", () => {\n    expect(\n      next([\n        [_, _, _],\n        [_, _, _],\n        [_, _, _],\n      ])\n    ).to.deep.equal([\n      [_, _, _],\n      [_, _, _],\n      [_, _, _],\n    ]);\n  });\n\n  it(\"should be dead if there is no neighbours\", () => {\n    const result = next([\n      [_, _, _],\n      [_, o, _],\n      [_, _, _],\n    ]);\n    expect(result[1][1]).to.equal(false);\n  });\n\n  it(\"should be dead if there are four or more neighbours\", () => {\n    const result = next([\n      [o, _, o],\n      [_, o, o],\n      [o, o, _],\n    ]);\n    expect(result[1][1]).to.equal(false);\n  });\n\n  it(\"should be dead if there are four or more neighbours #2\", () => {\n    const result = next([\n      [o, _, o],\n      [o, o, o],\n      [_, o, _],\n    ]);\n    expect(result[1][1]).to.equal(false);\n    expect(result[2][0]).to.equal(true);\n  });\n\n  it(\"should survive if there are 2 or 3 neighbours\", () => {\n    const result = next([\n      [_, _, o],\n      [_, o, o],\n      [o, _, _],\n    ]);\n    expect(result[1][1]).to.equal(true);\n    expect(result[1][2]).to.equal(true);\n  });\n\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", () => {\n    const result = next([\n      [_, _, o],\n      [_, _, o],\n      [o, _, _],\n    ]);\n    expect(result[1][1]).to.equal(true);\n    expect(result[0][2]).to.equal(false);\n  });\n\n  it(\"for empty cell, it should become populated if there are 3 neighbours\", () => {\n    const result = next([\n      [_, _, o, _, _, o],\n      [_, o, o, _, _, _],\n      [o, _, _, _, o, _],\n      [_, _, o, _, _, o],\n      [_, _, _, _, _, _],\n      [o, _, _, _, _, _],\n    ]);\n    expect(result[5][5]).to.equal(false);\n    expect(result[2][1]).to.equal(false);\n    expect(result[2][2]).to.equal(true);\n  });\n});\n\ndescribe(\"parse\", () => {\n  it(\"should return [] given ''\", () => {\n    expect(parse(\"\")).to.deep.equal([]);\n  });\n  it(\"should parse O as true and . as false\", () => {\n    expect(parse(\"...\\n.O.\\n...\\n\")).to.deep.equal([\n      [_, _, _],\n      [_, o, _],\n      [_, _, _],\n    ]);\n  });\n  it(\"should parse O as true and . as false\", () => {\n    expect(parse(\"...0\\n.00.\\n..0.\\n0...\\n\")).to.deep.equal([\n      [_, _, _, o],\n      [_, o, o, _],\n      [_, _, o, _],\n      [o, _, _, _],\n    ]);\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1628464302212
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/user/Desktop/career/rubbish/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/user/Desktop/career/rubbish\",\"filename\":\"/Users/user/Desktop/career/rubbish/src/engine.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/user/Desktop/career/rubbish\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/user/Desktop/career/rubbish/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/user/Desktop/career/rubbish",
      "filename": "/Users/user/Desktop/career/rubbish/src/engine.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "/Users/user/Desktop/career/rubbish",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/user/Desktop/career/rubbish/src/engine.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/user/Desktop/career/rubbish/src/engine.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/user/Desktop/career/rubbish/src/",
        "sourceFileName": "engine.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = exports.next = void 0;\n\n// (world: boolean[][]) => boolean[][]\nvar next = function next(world) {\n  var rows = world.length;\n  var cols = world[0].length;\n  var nestedArray = Array.from({\n    length: rows\n  }, function () {\n    return Array.from({\n      length: cols\n    }, function () {\n      return false;\n    });\n  });\n  nestedArray.forEach(function (row, y) {\n    return row.forEach(function (col, x) {\n      var number = 0;\n      var x_start = x >= 1 ? x - 1 : 0;\n      var y_start = y >= 1 ? y - 1 : 0;\n      var x_len = x == 0 || x == cols - 1 ? 1 : 2;\n      var y_len = y == 0 || y == rows - 1 ? 1 : 2;\n\n      for (var i = 0; i <= x_len; i++) {\n        for (var j = 0; j <= y_len; j++) {\n          if (i + x_start == x && j + y_start == y) continue;\n\n          if (world[j + y_start][i + x_start] == true) {\n            number++;\n          }\n        }\n      }\n\n      if ((number == 3 || number == 2) && world[y][x] == true) {\n        row[x] = true;\n      } else if (number == 3 && !row[x]) {\n        row[x] = true;\n      }\n    });\n  });\n  return nestedArray;\n}; // (pattern: string) => boolean[][]\n\n\nexports.next = next;\n\nvar parse = function parse(pattern) {\n  if (!pattern) return [];\n  var worldArr = pattern.split(\"\\n\").map(function (e) {\n    return e.split(\"\").map(function (x) {\n      return Boolean(x !== \".\");\n    });\n  });\n  worldArr.splice(-1);\n  return worldArr;\n};\n\nexports.parse = parse;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuZ2luZS5qcyJdLCJuYW1lcyI6WyJuZXh0Iiwid29ybGQiLCJyb3dzIiwibGVuZ3RoIiwiY29scyIsIm5lc3RlZEFycmF5IiwiQXJyYXkiLCJmcm9tIiwiZm9yRWFjaCIsInJvdyIsInkiLCJjb2wiLCJ4IiwibnVtYmVyIiwieF9zdGFydCIsInlfc3RhcnQiLCJ4X2xlbiIsInlfbGVuIiwiaSIsImoiLCJwYXJzZSIsInBhdHRlcm4iLCJ3b3JsZEFyciIsInNwbGl0IiwibWFwIiwiZSIsIkJvb2xlYW4iLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNPLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLEtBQUQsRUFBVztBQUM3QixNQUFNQyxJQUFJLEdBQUdELEtBQUssQ0FBQ0UsTUFBbkI7QUFDQSxNQUFNQyxJQUFJLEdBQUdILEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0UsTUFBdEI7QUFFQSxNQUFNRSxXQUFXLEdBQUdDLEtBQUssQ0FBQ0MsSUFBTixDQUFXO0FBQUVKLElBQUFBLE1BQU0sRUFBRUQ7QUFBVixHQUFYLEVBQTZCO0FBQUEsV0FDL0NJLEtBQUssQ0FBQ0MsSUFBTixDQUFXO0FBQUVKLE1BQUFBLE1BQU0sRUFBRUM7QUFBVixLQUFYLEVBQTZCO0FBQUEsYUFBTSxLQUFOO0FBQUEsS0FBN0IsQ0FEK0M7QUFBQSxHQUE3QixDQUFwQjtBQUdBQyxFQUFBQSxXQUFXLENBQUNHLE9BQVosQ0FBb0IsVUFBQ0MsR0FBRCxFQUFNQyxDQUFOO0FBQUEsV0FDbEJELEdBQUcsQ0FBQ0QsT0FBSixDQUNFLFVBQVNHLEdBQVQsRUFBY0MsQ0FBZCxFQUFpQjtBQUNmLFVBQUlDLE1BQU0sR0FBRyxDQUFiO0FBQ0EsVUFBSUMsT0FBTyxHQUFHRixDQUFDLElBQUksQ0FBTCxHQUFTQSxDQUFDLEdBQUcsQ0FBYixHQUFpQixDQUEvQjtBQUNBLFVBQUlHLE9BQU8sR0FBR0wsQ0FBQyxJQUFJLENBQUwsR0FBU0EsQ0FBQyxHQUFHLENBQWIsR0FBaUIsQ0FBL0I7QUFDQSxVQUFJTSxLQUFLLEdBQUdKLENBQUMsSUFBSSxDQUFMLElBQVVBLENBQUMsSUFBSVIsSUFBSSxHQUFHLENBQXRCLEdBQTBCLENBQTFCLEdBQThCLENBQTFDO0FBQ0EsVUFBSWEsS0FBSyxHQUFHUCxDQUFDLElBQUksQ0FBTCxJQUFVQSxDQUFDLElBQUlSLElBQUksR0FBRyxDQUF0QixHQUEwQixDQUExQixHQUE4QixDQUExQzs7QUFDQSxXQUFJLElBQUlnQixDQUFDLEdBQUcsQ0FBWixFQUFlQSxDQUFDLElBQUlGLEtBQXBCLEVBQTJCRSxDQUFDLEVBQTVCLEVBQWdDO0FBQzlCLGFBQUksSUFBSUMsQ0FBQyxHQUFHLENBQVosRUFBZUEsQ0FBQyxJQUFJRixLQUFwQixFQUEyQkUsQ0FBQyxFQUE1QixFQUFnQztBQUM5QixjQUFJRCxDQUFDLEdBQUdKLE9BQUosSUFBZUYsQ0FBZixJQUFvQk8sQ0FBQyxHQUFHSixPQUFKLElBQWVMLENBQXZDLEVBQTBDOztBQUMxQyxjQUFJVCxLQUFLLENBQUNrQixDQUFDLEdBQUdKLE9BQUwsQ0FBTCxDQUFtQkcsQ0FBQyxHQUFHSixPQUF2QixLQUFtQyxJQUF2QyxFQUE2QztBQUMzQ0QsWUFBQUEsTUFBTTtBQUNQO0FBQ0Y7QUFDRjs7QUFFRCxVQUFJLENBQUNBLE1BQU0sSUFBSSxDQUFWLElBQWVBLE1BQU0sSUFBSSxDQUExQixLQUFnQ1osS0FBSyxDQUFDUyxDQUFELENBQUwsQ0FBU0UsQ0FBVCxLQUFjLElBQWxELEVBQXdEO0FBQ3RESCxRQUFBQSxHQUFHLENBQUNHLENBQUQsQ0FBSCxHQUFTLElBQVQ7QUFDRCxPQUZELE1BRU8sSUFBSUMsTUFBTSxJQUFJLENBQVYsSUFBZSxDQUFDSixHQUFHLENBQUNHLENBQUQsQ0FBdkIsRUFBNEI7QUFDakNILFFBQUFBLEdBQUcsQ0FBQ0csQ0FBRCxDQUFILEdBQVMsSUFBVDtBQUNEO0FBQ0osS0FyQkQsQ0FEa0I7QUFBQSxHQUFwQjtBQXdCQSxTQUFPUCxXQUFQO0FBQ0QsQ0FoQ00sQyxDQWlDUDs7Ozs7QUFDTyxJQUFNZSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxDQUFDQyxPQUFELEVBQWE7QUFDaEMsTUFBSSxDQUFDQSxPQUFMLEVBQWMsT0FBTyxFQUFQO0FBQ2QsTUFBSUMsUUFBUSxHQUFHRCxPQUFPLENBQUNFLEtBQVIsQ0FBYyxJQUFkLEVBQW9CQyxHQUFwQixDQUF3QixVQUFTQyxDQUFULEVBQVk7QUFDakQsV0FBT0EsQ0FBQyxDQUFDRixLQUFGLENBQVEsRUFBUixFQUFZQyxHQUFaLENBQWdCLFVBQUFaLENBQUM7QUFBQSxhQUFJYyxPQUFPLENBQUNkLENBQUMsS0FBSyxHQUFQLENBQVg7QUFBQSxLQUFqQixDQUFQO0FBQ0QsR0FGYyxDQUFmO0FBR0FVLEVBQUFBLFFBQVEsQ0FBQ0ssTUFBVCxDQUFnQixDQUFDLENBQWpCO0FBQ0EsU0FBT0wsUUFBUDtBQUNELENBUE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL3VzZXIvRGVza3RvcC9jYXJlZXIvcnViYmlzaC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gKHdvcmxkOiBib29sZWFuW11bXSkgPT4gYm9vbGVhbltdW11cbmV4cG9ydCBjb25zdCBuZXh0ID0gKHdvcmxkKSA9PiB7XG4gIGNvbnN0IHJvd3MgPSB3b3JsZC5sZW5ndGg7XG4gIGNvbnN0IGNvbHMgPSB3b3JsZFswXS5sZW5ndGg7XG5cbiAgY29uc3QgbmVzdGVkQXJyYXkgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiByb3dzIH0sICgpID0+IFxuICAgIEFycmF5LmZyb20oeyBsZW5ndGg6IGNvbHMgfSwgKCkgPT4gZmFsc2UpXG4gICk7XG4gIG5lc3RlZEFycmF5LmZvckVhY2goKHJvdywgeSkgPT5cbiAgICByb3cuZm9yRWFjaChcbiAgICAgIGZ1bmN0aW9uKGNvbCwgeCkge1xuICAgICAgICB2YXIgbnVtYmVyID0gMDtcbiAgICAgICAgdmFyIHhfc3RhcnQgPSB4ID49IDEgPyB4IC0gMSA6IDA7XG4gICAgICAgIHZhciB5X3N0YXJ0ID0geSA+PSAxID8geSAtIDEgOiAwO1xuICAgICAgICB2YXIgeF9sZW4gPSB4ID09IDAgfHwgeCA9PSBjb2xzIC0gMSA/IDEgOiAyO1xuICAgICAgICB2YXIgeV9sZW4gPSB5ID09IDAgfHwgeSA9PSByb3dzIC0gMSA/IDEgOiAyO1xuICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDw9IHhfbGVuOyBpKyspIHtcbiAgICAgICAgICBmb3IodmFyIGogPSAwOyBqIDw9IHlfbGVuOyBqKyspIHtcbiAgICAgICAgICAgIGlmIChpICsgeF9zdGFydCA9PSB4ICYmIGogKyB5X3N0YXJ0ID09IHkpIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKHdvcmxkW2ogKyB5X3N0YXJ0XVtpICsgeF9zdGFydF0gPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICBudW1iZXIrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoKG51bWJlciA9PSAzIHx8IG51bWJlciA9PSAyKSAmJiB3b3JsZFt5XVt4XT09IHRydWUpIHtcbiAgICAgICAgICByb3dbeF0gPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKG51bWJlciA9PSAzICYmICFyb3dbeF0pIHtcbiAgICAgICAgICByb3dbeF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgfSlcbiAgKTtcbiAgcmV0dXJuIG5lc3RlZEFycmF5O1xufTtcbi8vIChwYXR0ZXJuOiBzdHJpbmcpID0+IGJvb2xlYW5bXVtdXG5leHBvcnQgY29uc3QgcGFyc2UgPSAocGF0dGVybikgPT4ge1xuICBpZiAoIXBhdHRlcm4pIHJldHVybiBbXTtcbiAgdmFyIHdvcmxkQXJyID0gcGF0dGVybi5zcGxpdChcIlxcblwiKS5tYXAoZnVuY3Rpb24oZSkge1xuICAgIHJldHVybiBlLnNwbGl0KFwiXCIpLm1hcCh4ID0+IEJvb2xlYW4oeCAhPT0gXCIuXCIpKTtcbiAgfSk7XG4gIHdvcmxkQXJyLnNwbGljZSgtMSk7XG4gIHJldHVybiB3b3JsZEFycjtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "engine.js"
      ],
      "names": [
        "next",
        "world",
        "rows",
        "length",
        "cols",
        "nestedArray",
        "Array",
        "from",
        "forEach",
        "row",
        "y",
        "col",
        "x",
        "number",
        "x_start",
        "y_start",
        "x_len",
        "y_len",
        "i",
        "j",
        "parse",
        "pattern",
        "worldArr",
        "split",
        "map",
        "e",
        "Boolean",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;AACO,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAnB;AACA,MAAMC,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASE,MAAtB;AAEA,MAAME,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEJ,IAAAA,MAAM,EAAED;AAAV,GAAX,EAA6B;AAAA,WAC/CI,KAAK,CAACC,IAAN,CAAW;AAAEJ,MAAAA,MAAM,EAAEC;AAAV,KAAX,EAA6B;AAAA,aAAM,KAAN;AAAA,KAA7B,CAD+C;AAAA,GAA7B,CAApB;AAGAC,EAAAA,WAAW,CAACG,OAAZ,CAAoB,UAACC,GAAD,EAAMC,CAAN;AAAA,WAClBD,GAAG,CAACD,OAAJ,CACE,UAASG,GAAT,EAAcC,CAAd,EAAiB;AACf,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,OAAO,GAAGF,CAAC,IAAI,CAAL,GAASA,CAAC,GAAG,CAAb,GAAiB,CAA/B;AACA,UAAIG,OAAO,GAAGL,CAAC,IAAI,CAAL,GAASA,CAAC,GAAG,CAAb,GAAiB,CAA/B;AACA,UAAIM,KAAK,GAAGJ,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAIR,IAAI,GAAG,CAAtB,GAA0B,CAA1B,GAA8B,CAA1C;AACA,UAAIa,KAAK,GAAGP,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAIR,IAAI,GAAG,CAAtB,GAA0B,CAA1B,GAA8B,CAA1C;;AACA,WAAI,IAAIgB,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,cAAID,CAAC,GAAGJ,OAAJ,IAAeF,CAAf,IAAoBO,CAAC,GAAGJ,OAAJ,IAAeL,CAAvC,EAA0C;;AAC1C,cAAIT,KAAK,CAACkB,CAAC,GAAGJ,OAAL,CAAL,CAAmBG,CAAC,GAAGJ,OAAvB,KAAmC,IAAvC,EAA6C;AAC3CD,YAAAA,MAAM;AACP;AACF;AACF;;AAED,UAAI,CAACA,MAAM,IAAI,CAAV,IAAeA,MAAM,IAAI,CAA1B,KAAgCZ,KAAK,CAACS,CAAD,CAAL,CAASE,CAAT,KAAc,IAAlD,EAAwD;AACtDH,QAAAA,GAAG,CAACG,CAAD,CAAH,GAAS,IAAT;AACD,OAFD,MAEO,IAAIC,MAAM,IAAI,CAAV,IAAe,CAACJ,GAAG,CAACG,CAAD,CAAvB,EAA4B;AACjCH,QAAAA,GAAG,CAACG,CAAD,CAAH,GAAS,IAAT;AACD;AACJ,KArBD,CADkB;AAAA,GAApB;AAwBA,SAAOP,WAAP;AACD,CAhCM,C,CAiCP;;;;;AACO,IAAMe,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAa;AAChC,MAAI,CAACA,OAAL,EAAc,OAAO,EAAP;AACd,MAAIC,QAAQ,GAAGD,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAwB,UAASC,CAAT,EAAY;AACjD,WAAOA,CAAC,CAACF,KAAF,CAAQ,EAAR,EAAYC,GAAZ,CAAgB,UAAAZ,CAAC;AAAA,aAAIc,OAAO,CAACd,CAAC,KAAK,GAAP,CAAX;AAAA,KAAjB,CAAP;AACD,GAFc,CAAf;AAGAU,EAAAA,QAAQ,CAACK,MAAT,CAAgB,CAAC,CAAjB;AACA,SAAOL,QAAP;AACD,CAPM",
      "sourceRoot": "/Users/user/Desktop/career/rubbish/src/",
      "sourcesContent": [
        "// (world: boolean[][]) => boolean[][]\nexport const next = (world) => {\n  const rows = world.length;\n  const cols = world[0].length;\n\n  const nestedArray = Array.from({ length: rows }, () => \n    Array.from({ length: cols }, () => false)\n  );\n  nestedArray.forEach((row, y) =>\n    row.forEach(\n      function(col, x) {\n        var number = 0;\n        var x_start = x >= 1 ? x - 1 : 0;\n        var y_start = y >= 1 ? y - 1 : 0;\n        var x_len = x == 0 || x == cols - 1 ? 1 : 2;\n        var y_len = y == 0 || y == rows - 1 ? 1 : 2;\n        for(var i = 0; i <= x_len; i++) {\n          for(var j = 0; j <= y_len; j++) {\n            if (i + x_start == x && j + y_start == y) continue;\n            if (world[j + y_start][i + x_start] == true) {\n              number++;\n            }\n          }\n        }\n\n        if ((number == 3 || number == 2) && world[y][x]== true) {\n          row[x] = true;\n        } else if (number == 3 && !row[x]) {\n          row[x] = true;\n        }\n    })\n  );\n  return nestedArray;\n};\n// (pattern: string) => boolean[][]\nexport const parse = (pattern) => {\n  if (!pattern) return [];\n  var worldArr = pattern.split(\"\\n\").map(function(e) {\n    return e.split(\"\").map(x => Boolean(x !== \".\"));\n  });\n  worldArr.splice(-1);\n  return worldArr;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1628814835206
  }
}